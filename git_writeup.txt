WORKING WITH GIT
*INSTALL GIT
*TO CREATE NEW FOLDER (mkdir NAME-OF-FOLDER)
*THEN YOU NEED TO MAKE IT A GIT REPOSITORY (git init .)
THEN YOU CAN CREATE FILE LIKE HTML, CSS,JS WITH (branch index.html)
(branch index.js)
(branch main.css)

(ls to list the file in a folder)

TO GET THE STATUS USE (git status)

THEN YOU NEED TO ADD THEM TO THE STAGING AREA WITH (git add index.html) and do it to the rest.
TO UNSTAGE IT YOU USE (git rm --cached index.html)

NOTE TO STAGE EVERY FILE ONE YOU USE (git add .)

NOTE THE . AFTER THE git add MEANS CURRENT DIRECTORY IF I USE LIKE I HAVE ONE FOLDER IN THE FOLDER AND AM INSIDE THAT FOLDER AND I HAVE ONLY ONE FILE BUT IN THE PARENT FOLDER I HAVE 3 FILE 
ALL TOGETHER IS 4 FILE AND I USE (git add .) IT WILL ONLY ADD THE 1 FILE TO THE STAGE AREA BUT IF I WANT TO ADD ALL OF THEM TO THE STAGE AREA I WILL USE (git add -A)

NOTE TO REMOVE ALL FILE FROM THE STAGE AREA YOU USE (git rm -r --cached .)

TO COMMIT STAGE FILE YOU USE THIS COMMAND git commit -m (m for message) "name of the commit"

TO SEE THE CHANGES THAT WE HAVE COMMITED (git log)
NOTE GIT ALWAYS CREATE A UNIQUE COMMIT KEYS LIKE
(commit c5baad97895be042a80427490edc507b8977b32c (HEAD -> master)
Author: Ayomikun <omotoshoayomikun@gmail.com>
Date:   Fri Apr 29 18:17:54 2022 +0100
    bootstrap project) 
SO TO GET A PARTICULAR COMMIT COPY THE commit key AND USE (git show then past the commit key)

TO OPEN A FILE USE example: (vi index.js) IT WILL OPEN THEN PRESS i (i for insert) AND  WRITE WHAT YOU WANT TO WRITE AND THEN PRESS ESC BUTTON AND THEN PRESS : AND THEN PRESS wq IT WILL SAVE AND MODIFY

TO RUN A FILE USE (cat index.js) OR YOU CAN OPEN YOUR EDITOR AND ADD WHAT YOU WANT TO ADD

NOW NOTE WE HAVE MODIFY INDEX.JS SO IT IS DIFFRENT FROM WHAT IT IS IN THE COMMIT WHAT YOU NEED TO DO IS ADD IT TO THE STAGE AREA AND THEN COMMIT IT

IF YOU WANT TO RESTORE DELETED TEXT OR UPDATE THAT YOU DELETED IN A FILE JUST USE (git restore index.js) 

LET ASSUME THAT WHILE YOU ARE ADD COMMIT YOU MADE A MISTAKE WITH THE NAME OR MESSAGE OF THE COMMIT TO AMEND THAT USE (git commit --amend -m "the message name")